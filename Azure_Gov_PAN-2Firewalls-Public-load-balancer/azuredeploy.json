{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.13",
    "parameters": {
      "srcIPInboundNSG": {
        "defaultValue": "0.0.0.0/0",
        "type": "String",
        "metadata": {
          "description": "Your source public IP address. Added to the inbound NSG on eth0 (MGMT)"
        }
      },
        "vmName": {
            "defaultValue": "FW-Edge1",
            "type": "String",
            "metadata": {
                "description": "Name of VM-Series FW in the Azure portal"
            }
        },
        "FW2vmName": {
            "defaultValue": "FW-Edge2",
            "type": "String",
            "metadata": {
                "description": "Name of 2nd VM-Series FW in the Azure portal"
            }
        },
        "storageAccountName": {
            "type": "String",
            "metadata": {
                "description": "Name of the existing storage account used to store the VM's disks"
            }
        },
        "storageAccountExistingRG": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Storage Accounts Resource Group location."
            }
        },
        "fwAvSet": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Availability Set name for Firewalls"
            }
        },
        "vmSize": {
            "defaultValue": "Standard_DS3_v2",
            "allowedValues": [
                "Standard_D3",
                "Standard_D4",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_A4",
                "Standard_DS3_v2",
                "Standard_DS4_v2"
            ],
            "type": "String",
            "metadata": {
                "description": "Azure VM size for VM-Series"
            }
        },
        "imageVersion": {
            "defaultValue": "latest",
            "allowedValues": [
                "7.1.14",
                "latest"
            ],
            "type": "String",
            "metadata": {
                "description": "PAN OS Version"
            }
        },
        "imageSku": {
            "defaultValue": "byol",
            "allowedValues": [
                "byol",
                "bundle1",
                "bundle2"
            ],
            "type": "String",
            "metadata": {
                "description": "Firewall License Model"
            }
        },
        "virtualNetworkName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of the Virtual Network (VNET)"
            }
        },
        "virtualNetworkAddressPrefix": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Virtual network address CIDR"
            }
        },
        "virtualNetworkExistingRGName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of resource group of existing VNET (if applicable)"
            }
        },
        "subnet0Name": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Subnet for Management"
            }
        },
      "subnet1Name": {
        "defaultValue": "",
        "type": "String",
        "metadata": {
          "description": "Subnet for Untrust"
        }
      },
      "subnet2Name": {
        "defaultValue": "",
        "type": "String",
        "metadata": {
          "description": "Subnet for Trust"
        }
      },
      "subnet3Name": {
        "defaultValue": "",
        "type": "String",
        "metadata": {
          "description": "Subnet for DMZ"
        }
      },
        "subnet0Prefix": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Mgmt subnet CIDR"
            }
        },
      "subnet1Prefix": {
        "defaultValue": "",
        "type": "String",
        "metadata": {
          "description": "Untrust subnet CIDR"
        }
      },
      "subnet2Prefix": {
        "defaultValue": "",
        "type": "String",
        "metadata": {
          "description": "Trust subnet CIDR"
        }
      },
        "subnet3Prefix": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "DMZ subnet CIDR"
            }
        },
        "subnet0StartAddress": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Mgmt subnet start address"
            }
        },
        "subnet1StartAddress": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Untrust subnet start address"
            }
        },
        "subnet2StartAddress": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Trust subnet start address"
            }
        },
        "subnet3StartAddress": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "DMZ subnet start address"
            }
        },
        "FW2subnet0StartAddress": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Mgmt subnet start address"
            }
        },
        "FW2subnet1StartAddress": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Untrust subnet start address"
            }
        },
        "FW2subnet2StartAddress": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Trust subnet start address"
            }
        },
        "FW2subnet3StartAddress": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "DMZ subnet start address"
            }
        },
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "Username of the administrator account of VM-Series"
            }
        },
        "adminPassword": {
            "defaultValue": "",
            "type": "SecureString",
            "metadata": {
                "description": "Password for the administrator account of VM-Series"
            }
        },
        "publicIPAddressName": {
            "type": "String",
            "metadata": {
                "description": "Name of FW1 MGMT Public Address"
            }
        },
        "FW2publicIPAddressName": {
            "type": "String",
            "metadata": {
                "description": "Name of FW2 MGMT Public Address"
            }
        }
    },
    "variables": {
        "apiVersion": "2015-06-15",
        "imagePublisher": "paloaltonetworks",
        "imageSku": "[parameters('imageSku')]",
        "imageOffer": "vmseries1",
        "imageVersion": "[parameters('imageVersion')]",
        "nsgName": "DefaultNSG",
        "nicName": "[concat(parameters('vmName'), '-eth')]",
        "FW2nicName": "[concat(parameters('FW2vmName'), '-eth')]",
        "FWPrivateIPAddressUntrust": "[parameters('subnet1StartAddress')]",
        "FWPrivateIPAddressTrust": "[parameters('subnet2StartAddress')]",
        "vnetID": "[resourceId(parameters('virtualNetworkExistingRGName'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",
        "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
        "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2Name'))]",
        "subnet3Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet3Name'))]",
        "publicIPAddressType": "Dynamic",
        "subnets": [
            {
                "name": "[parameters('subnet0Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet0Prefix')]",
                    "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                    }
                }
            },
            {
                "name": "[parameters('subnet1Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet1Prefix')]"
                }
            },
            {
                "name": "[parameters('subnet2Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet2Prefix')]"
                }
            },
            {
                "name": "[parameters('subnet3Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet3Prefix')]"
                }
            }
        ],
        "storageAccountId": "[resourceId(parameters('storageAccountExistingRG'),'Microsoft.Storage/StorageAccounts',parameters('storageAccountName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('fwAvSet')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "platformUpdateDomainCount": 2,
                "platformFaultDomainCount": 2
            },
            "resources": [],
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('publicIPAddressName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('publicIPAddressName')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('FW2publicIPAddressName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('FW2publicIPAddressName')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-Outside-From-IP",
                        "properties": {
                            "description": "Rule",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('srcIPInboundNSG')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow-Intra",
                        "properties": {
                            "description": "Allow intra network traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('virtualNetworkAddressPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Default-Deny",
                        "properties": {
                            "description": "Default-Deny if we don't match Allow rule",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '0')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig-mgmt",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('subnet0StartAddress')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet0Ref')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '1')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig-untrust",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('subnet1StartAddress')]",
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '2')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig-trust",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('subnet2StartAddress')]",
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '3')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig-dmz",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('subnet3StartAddress')]",
                            "subnet": {
                                "id": "[variables('subnet3Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('FW2nicName'), '0')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig-mgmt",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('FW2subnet0StartAddress')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('FW2publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet0Ref')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('FW2publicIPAddressName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('FW2nicName'), '1')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig-untrust",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('FW2subnet1StartAddress')]",
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ]
            },
          "dependsOn": [

          ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('FW2nicName'), '2')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig-trust",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('FW2subnet2StartAddress')]",
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('Fw2nicName'), '3')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig-dmz",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('FW2subnet3StartAddress')]",
                            "subnet": {
                                "id": "[variables('subnet3Ref')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "plan": {
                "name": "[variables('imageSku')]",
                "product": "[variables('imageOffer')]",
                "publisher": "[variables('imagePublisher')]"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('fwAvSet'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://', parameters('storageAccountName'), '.blob.core.usgovcloudapi.net/vhds/', parameters('vmName'), '-', variables('imageOffer'), '-', variables('imageSku'), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'0'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'1'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'2'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'3'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }
            },
          "dependsOn": [
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '0')]",
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '1')]",
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '2')]",
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '3')]",
            "[concat('Microsoft.Compute/availabilitySets/', parameters('fwAvSet'))]"
          ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('FW2vmName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "plan": {
                "name": "[variables('imageSku')]",
                "product": "[variables('imageOffer')]",
                "publisher": "[variables('imagePublisher')]"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('fwAvSet'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('FW2vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                        "name": "osdisk",
                      "vhd": {
                        "uri": "[concat('http://', parameters('storageAccountName'), '.blob.core.usgovcloudapi.net/vhds/', parameters('FW2vmName'), '-', variables('imageOffer'), '-', variables('imageSku'), '.vhd')]"
                      },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('FW2nicName'),'0'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('FW2nicName'),'1'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('FW2nicName'),'2'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('FW2nicName'),'3'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }
            },
          "dependsOn": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.13",
            "parameters": {
              "srcIPInboundNSG": {
                "defaultValue": "0.0.0.0/0",
                "type": "String",
                "metadata": {
                  "description": "Your source public IP address. Added to the inbound NSG on eth0 (MGMT)"
                }
              },
              "vmName": {
                "defaultValue": "FW-Edge1",
                "type": "String",
                "metadata": {
                  "description": "Name of VM-Series FW in the Azure portal"
                }
              },
              "FW2vmName": {
                "defaultValue": "FW-Edge2",
                "type": "String",
                "metadata": {
                  "description": "Name of 2nd VM-Series FW in the Azure portal"
                }
              },
              "storageAccountName": {
                "type": "String",
                "metadata": {
                  "description": "Name of the existing storage account used to store the VM's disks"
                }
              },
              "storageAccountExistingRG": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Storage Accounts Resource Group location."
                }
              },
              "fwAvSet": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Availability Set name for Firewalls"
                }
              },
              "vmSize": {
                "defaultValue": "Standard_DS3_v2",
                "allowedValues": [
                  "Standard_D3",
                  "Standard_D4",
                  "Standard_D3_v2",
                  "Standard_D4_v2",
                  "Standard_A4",
                  "Standard_DS3_v2",
                  "Standard_DS4_v2"
                ],
                "type": "String",
                "metadata": {
                  "description": "Azure VM size for VM-Series"
                }
              },
              "imageVersion": {
                "defaultValue": "latest",
                "allowedValues": [
                  "7.1.14",
                  "latest"
                ],
                "type": "String",
                "metadata": {
                  "description": "PAN OS Version"
                }
              },
              "imageSku": {
                "defaultValue": "byol",
                "allowedValues": [
                  "byol",
                  "bundle1",
                  "bundle2"
                ],
                "type": "String",
                "metadata": {
                  "description": "Firewall License Model"
                }
              },
              "virtualNetworkName": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Name of the Virtual Network (VNET)"
                }
              },
              "virtualNetworkAddressPrefix": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Virtual network address CIDR"
                }
              },
              "virtualNetworkExistingRGName": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Name of resource group of existing VNET (if applicable)"
                }
              },
              "subnet0Name": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Subnet for Management"
                }
              },
              "subnet1Name": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Subnet for Untrust"
                }
              },
              "subnet2Name": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Subnet for Trust"
                }
              },
              "subnet3Name": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Subnet for DMZ"
                }
              },
              "subnet0Prefix": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Mgmt subnet CIDR"
                }
              },
              "subnet1Prefix": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Untrust subnet CIDR"
                }
              },
              "subnet2Prefix": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Trust subnet CIDR"
                }
              },
              "subnet3Prefix": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "DMZ subnet CIDR"
                }
              },
              "subnet0StartAddress": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Mgmt subnet start address"
                }
              },
              "subnet1StartAddress": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Untrust subnet start address"
                }
              },
              "subnet2StartAddress": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Trust subnet start address"
                }
              },
              "subnet3StartAddress": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "DMZ subnet start address"
                }
              },
              "FW2subnet0StartAddress": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Mgmt subnet start address"
                }
              },
              "FW2subnet1StartAddress": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Untrust subnet start address"
                }
              },
              "FW2subnet2StartAddress": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "Trust subnet start address"
                }
              },
              "FW2subnet3StartAddress": {
                "defaultValue": "",
                "type": "String",
                "metadata": {
                  "description": "DMZ subnet start address"
                }
              },
              "adminUsername": {
                "type": "String",
                "metadata": {
                  "description": "Username of the administrator account of VM-Series"
                }
              },
              "adminPassword": {
                "defaultValue": "",
                "type": "SecureString",
                "metadata": {
                  "description": "Password for the administrator account of VM-Series"
                }
              },
              "publicIPAddressName": {
                "type": "String",
                "metadata": {
                  "description": "Name of FW1 MGMT Public Address"
                }
              },
              "FW2publicIPAddressName": {
                "type": "String",
                "metadata": {
                  "description": "Name of FW2 MGMT Public Address"
                }
              }
            },
            "variables": {
              "apiVersion": "2015-06-15",
              "imagePublisher": "paloaltonetworks",
              "imageSku": "[parameters('imageSku')]",
              "imageOffer": "vmseries1",
              "imageVersion": "[parameters('imageVersion')]",
              "nsgName": "DefaultNSG",
              "nicName": "[concat(parameters('vmName'), '-eth')]",
              "FW2nicName": "[concat(parameters('FW2vmName'), '-eth')]",
              "FWPrivateIPAddressUntrust": "[parameters('subnet1StartAddress')]",
              "FWPrivateIPAddressTrust": "[parameters('subnet2StartAddress')]",
              "vnetID": "[resourceId(parameters('virtualNetworkExistingRGName'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",
              "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
              "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
              "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2Name'))]",
              "subnet3Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet3Name'))]",
              "publicIPAddressType": "Dynamic",
              "subnets": [
                {
                  "name": "[parameters('subnet0Name')]",
                  "properties": {
                    "addressPrefix": "[parameters('subnet0Prefix')]",
                    "networkSecurityGroup": {
                      "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                    }
                  }
                },
                {
                  "name": "[parameters('subnet1Name')]",
                  "properties": {
                    "addressPrefix": "[parameters('subnet1Prefix')]"
                  }
                },
                {
                  "name": "[parameters('subnet2Name')]",
                  "properties": {
                    "addressPrefix": "[parameters('subnet2Prefix')]"
                  }
                },
                {
                  "name": "[parameters('subnet3Name')]",
                  "properties": {
                    "addressPrefix": "[parameters('subnet3Prefix')]"
                  }
                }
              ],
              "storageAccountId": "[resourceId(parameters('storageAccountExistingRG'),'Microsoft.Storage/StorageAccounts',parameters('storageAccountName'))]"
            },
            "resources": [
              {
                "type": "Microsoft.Compute/availabilitySets",
                "name": "[parameters('fwAvSet')]",
                "apiVersion": "2015-06-15",
                "location": "[resourceGroup().location]",
                "tags": {},
                "properties": {
                  "platformUpdateDomainCount": 2,
                  "platformFaultDomainCount": 2
                },
                "resources": [],
                "dependsOn": []
              },
              {
                "type": "Microsoft.Network/publicIPAddresses",
                "name": "[parameters('publicIPAddressName')]",
                "apiVersion": "2015-06-15",
                "location": "[resourceGroup().location]",
                "properties": {
                  "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                  "dnsSettings": {
                    "domainNameLabel": "[parameters('publicIPAddressName')]"
                  }
                }
              },
              {
                "type": "Microsoft.Network/publicIPAddresses",
                "name": "[parameters('FW2publicIPAddressName')]",
                "apiVersion": "2015-06-15",
                "location": "[resourceGroup().location]",
                "properties": {
                  "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                  "dnsSettings": {
                    "domainNameLabel": "[parameters('FW2publicIPAddressName')]"
                  }
                }
              },
              {
                "type": "Microsoft.Network/networkSecurityGroups",
                "name": "[variables('nsgName')]",
                "apiVersion": "[variables('apiVersion')]",
                "location": "[resourceGroup().location]",
                "properties": {
                  "securityRules": [
                    {
                      "name": "Allow-Outside-From-IP",
                      "properties": {
                        "description": "Rule",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "[parameters('srcIPInboundNSG')]",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 100,
                        "direction": "Inbound"
                      }
                    },
                    {
                      "name": "Allow-Intra",
                      "properties": {
                        "description": "Allow intra network traffic",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "[parameters('virtualNetworkAddressPrefix')]",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 101,
                        "direction": "Inbound"
                      }
                    },
                    {
                      "name": "Default-Deny",
                      "properties": {
                        "description": "Default-Deny if we don't match Allow rule",
                        "protocol": "*",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Deny",
                        "priority": 200,
                        "direction": "Inbound"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Microsoft.Network/networkInterfaces",
                "name": "[concat(variables('nicName'), '0')]",
                "apiVersion": "2015-06-15",
                "location": "[resourceGroup().location]",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "ipconfig-mgmt",
                      "properties": {
                        "privateIPAllocationMethod": "Static",
                        "privateIPAddress": "[parameters('subnet0StartAddress')]",
                        "publicIPAddress": {
                          "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
                        },
                        "subnet": {
                          "id": "[variables('subnet0Ref')]"
                        }
                      }
                    }
                  ]
                },
                "dependsOn": [
                  "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"
                ]
              },
              {
                "type": "Microsoft.Network/networkInterfaces",
                "name": "[concat(variables('nicName'), '1')]",
                "apiVersion": "2015-06-15",
                "location": "[resourceGroup().location]",
                "properties": {
                  "enableIPForwarding": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig-untrust",
                      "properties": {
                        "privateIPAllocationMethod": "Static",
                        "privateIPAddress": "[parameters('subnet1StartAddress')]",
                        "subnet": {
                          "id": "[variables('subnet1Ref')]"
                        }
                      }
                    }
                  ]
                },
                "dependsOn": [

                ]
              },
              {
                "type": "Microsoft.Network/networkInterfaces",
                "name": "[concat(variables('nicName'), '2')]",
                "apiVersion": "2015-06-15",
                "location": "[resourceGroup().location]",
                "properties": {
                  "enableIPForwarding": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig-trust",
                      "properties": {
                        "privateIPAllocationMethod": "Static",
                        "privateIPAddress": "[parameters('subnet2StartAddress')]",
                        "subnet": {
                          "id": "[variables('subnet2Ref')]"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "Microsoft.Network/networkInterfaces",
                "name": "[concat(variables('nicName'), '3')]",
                "apiVersion": "2015-06-15",
                "location": "[resourceGroup().location]",
                "properties": {
                  "enableIPForwarding": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig-dmz",
                      "properties": {
                        "privateIPAllocationMethod": "Static",
                        "privateIPAddress": "[parameters('subnet3StartAddress')]",
                        "subnet": {
                          "id": "[variables('subnet3Ref')]"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "Microsoft.Network/networkInterfaces",
                "name": "[concat(variables('FW2nicName'), '0')]",
                "apiVersion": "2015-06-15",
                "location": "[resourceGroup().location]",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "ipconfig-mgmt",
                      "properties": {
                        "privateIPAllocationMethod": "Static",
                        "privateIPAddress": "[parameters('FW2subnet0StartAddress')]",
                        "publicIPAddress": {
                          "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('FW2publicIPAddressName'))]"
                        },
                        "subnet": {
                          "id": "[variables('subnet0Ref')]"
                        }
                      }
                    }
                  ]
                },
                "dependsOn": [
                  "[concat('Microsoft.Network/publicIPAddresses/', parameters('FW2publicIPAddressName'))]"
                ]
              },
              {
                "type": "Microsoft.Network/networkInterfaces",
                "name": "[concat(variables('FW2nicName'), '1')]",
                "apiVersion": "2015-06-15",
                "location": "[resourceGroup().location]",
                "properties": {
                  "enableIPForwarding": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig-untrust",
                      "properties": {
                        "privateIPAllocationMethod": "Static",
                        "privateIPAddress": "[parameters('FW2subnet1StartAddress')]",
                        "subnet": {
                          "id": "[variables('subnet1Ref')]"
                        }
                      }
                    }
                  ]
                },
                "dependsOn": [
                ]
              },
              {
                "type": "Microsoft.Network/networkInterfaces",
                "name": "[concat(variables('FW2nicName'), '2')]",
                "apiVersion": "2015-06-15",
                "location": "[resourceGroup().location]",
                "properties": {
                  "enableIPForwarding": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig-trust",
                      "properties": {
                        "privateIPAllocationMethod": "Static",
                        "privateIPAddress": "[parameters('FW2subnet2StartAddress')]",
                        "subnet": {
                          "id": "[variables('subnet2Ref')]"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "Microsoft.Network/networkInterfaces",
                "name": "[concat(variables('Fw2nicName'), '3')]",
                "apiVersion": "2015-06-15",
                "location": "[resourceGroup().location]",
                "properties": {
                  "enableIPForwarding": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig-dmz",
                      "properties": {
                        "privateIPAllocationMethod": "Static",
                        "privateIPAddress": "[parameters('FW2subnet3StartAddress')]",
                        "subnet": {
                          "id": "[variables('subnet3Ref')]"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "Microsoft.Compute/virtualMachines",
                "name": "[parameters('vmName')]",
                "apiVersion": "[variables('apiVersion')]",
                "location": "[resourceGroup().location]",
                "plan": {
                  "name": "[variables('imageSku')]",
                  "product": "[variables('imageOffer')]",
                  "publisher": "[variables('imagePublisher')]"
                },
                "properties": {
                  "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('fwAvSet'))]"
                  },
                  "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                  },
                  "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                  },
                  "storageProfile": {
                    "imageReference": {
                      "publisher": "[variables('imagePublisher')]",
                      "offer": "[variables('imageOffer')]",
                      "sku": "[variables('imageSku')]",
                      "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                      "name": "osdisk",
                      "vhd": {
                        "uri": "[concat('http://', parameters('storageAccountName'), '.blob.core.usgovcloudapi.net/vhds/', parameters('vmName'), '-', variables('imageOffer'), '-', variables('imageSku'), '.vhd')]"
                      },
                      "caching": "ReadWrite",
                      "createOption": "FromImage"
                    }
                  },
                  "networkProfile": {
                    "networkInterfaces": [
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'0'))]",
                        "properties": {
                          "primary": true
                        }
                      },
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'1'))]",
                        "properties": {
                          "primary": false
                        }
                      },
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'2'))]",
                        "properties": {
                          "primary": false
                        }
                      },
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'3'))]",
                        "properties": {
                          "primary": false
                        }
                      }
                    ]
                  }
                },
                "dependsOn": [
                  "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '0')]",
                  "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '1')]",
                  "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '2')]",
                  "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '3')]",
                  "[concat('Microsoft.Compute/availabilitySets/', parameters('fwAvSet'))]"
                ]
              },
              {
                "type": "Microsoft.Compute/virtualMachines",
                "name": "[parameters('FW2vmName')]",
                "apiVersion": "[variables('apiVersion')]",
                "location": "[resourceGroup().location]",
                "plan": {
                  "name": "[variables('imageSku')]",
                  "product": "[variables('imageOffer')]",
                  "publisher": "[variables('imagePublisher')]"
                },
                "properties": {
                  "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('fwAvSet'))]"
                  },
                  "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                  },
                  "osProfile": {
                    "computerName": "[parameters('FW2vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                  },
                  "storageProfile": {
                    "imageReference": {
                      "publisher": "[variables('imagePublisher')]",
                      "offer": "[variables('imageOffer')]",
                      "sku": "[variables('imageSku')]",
                      "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                      "name": "osdisk",
                      "vhd": {
                        "uri": "[concat('http://', parameters('storageAccountName'), '.blob.core.usgovcloudapi.net/vhds/', parameters('FW2vmName'), '-', variables('imageOffer'), '-', variables('imageSku'), '.vhd')]"
                      },
                      "caching": "ReadWrite",
                      "createOption": "FromImage"
                    }
                  },
                  "networkProfile": {
                    "networkInterfaces": [
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('FW2nicName'),'0'))]",
                        "properties": {
                          "primary": true
                        }
                      },
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('FW2nicName'),'1'))]",
                        "properties": {
                          "primary": false
                        }
                      },
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('FW2nicName'),'2'))]",
                        "properties": {
                          "primary": false
                        }
                      },
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('FW2nicName'),'3'))]",
                        "properties": {
                          "primary": false
                        }
                      }
                    ]
                  }
                },
                "dependsOn": [
                  "[concat('Microsoft.Network/networkInterfaces/', variables('FW2nicName'), '0')]",
                  "[concat('Microsoft.Network/networkInterfaces/', variables('FW2nicName'), '1')]",
                  "[concat('Microsoft.Network/networkInterfaces/', variables('FW2nicName'), '2')]",
                  "[concat('Microsoft.Network/networkInterfaces/', variables('FW2nicName'), '3')]",
                  "[concat('Microsoft.Compute/availabilitySets/', parameters('fwAvSet'))]"
                ]
              }
            ]
          }
                "[concat('Microsoft.Network/networkInterfaces/', variables('FW2nicName'), '0')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('FW2nicName'), '1')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('FW2nicName'), '2')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('FW2nicName'), '3')]",
                "[concat('Microsoft.Compute/availabilitySets/', parameters('fwAvSet'))]"
            ]
        }
    ]
}
